Grammar

    0 $accept: input $end

    1 input: ε
    2      | input line

    3 line: '\n'
    4     | expr '\n'
    5     | error '\n'

    6 expr: "number" '+' "number"


Terminals, with rules where they appear

    $end (0) 0
    '\n' (10) 3 4 5
    '+' (43) 6
    error (256) 5
    "number" <double> (258) 6


Nonterminals, with rules where they appear

    $accept (6)
        on left: 0
    input (7)
        on left: 1 2
        on right: 0 2
    line (8)
        on left: 3 4 5
        on right: 2
    expr <double> (9)
        on left: 6
        on right: 4


State 0

    0 $accept: • input $end

    $default  reduce using rule 1 (input)

    input  go to state 1


State 1

    0 $accept: input • $end
    2 input: input • line

    $end      shift, and go to state 2
    error     shift, and go to state 3
    "number"  shift, and go to state 4
    '\n'      shift, and go to state 5

    line  go to state 6
    expr  go to state 7


State 2

    0 $accept: input $end •

    $default  accept


State 3

    5 line: error • '\n'

    '\n'  shift, and go to state 8


State 4

    6 expr: "number" • '+' "number"

    '+'  shift, and go to state 9


State 5

    3 line: '\n' •

    $default  reduce using rule 3 (line)


State 6

    2 input: input line •

    $default  reduce using rule 2 (input)


State 7

    4 line: expr • '\n'

    '\n'  shift, and go to state 10


State 8

    5 line: error '\n' •

    $default  reduce using rule 5 (line)


State 9

    6 expr: "number" '+' • "number"

    "number"  shift, and go to state 11


State 10

    4 line: expr '\n' •

    $default  reduce using rule 4 (line)


State 11

    6 expr: "number" '+' "number" •

    $default  reduce using rule 6 (expr)
